components:
  product-catalog:
    envOverrides:
      - name: NEW_RELIC_LICENSE_KEY
        valueFrom:
          secretKeyRef:
            name: new-relic-license-key
            key: license-key
prometheus:
  server:
    resources:
      requests:
        memory: "512Mi"
        cpu: "500m"
      limits:
        memory: "1Gi"
        cpu: "1"
    serverFiles:
      prometheus.yml:
        global:
          scrape_interval: 15s
          evaluation_interval: 15s
    persistentVolume:
      enabled: true
      existingClaim: prometheus
      mountPath: /data
      subPath: ""
    emptyDir: {}
    configMapOverrideName: ""
    configFromSecret: ""
    storage:
      volumeClaimTemplate: null
    extraConfigmapMounts: []
    extraSecretMounts: []
    extraHostPathMounts: []
opentelemetry-collector:
  enabled: true
  image:
    repository: "otel/opentelemetry-collector-contrib"
  fullnameOverride: otel-collector
  mode: deployment
  presets:
    kubernetesAttributes:
      enabled: true
  resources:
    limits:
      memory: 200Mi
  service:
    type: ClusterIP
  ports:
    metrics:
      enabled: true
  podAnnotations:
    prometheus.io/scrape: "true"
    opentelemetry_community_demo: "true"
  config:
    receivers:
      otlp:
        protocols:
          http:
            cors:
              allowed_origins:
                - "http://*"
                - "https://*"
      httpcheck/frontend-proxy:
        targets:
          - endpoint: http://frontend-proxy:8080
      redis:
        endpoint: "valkey-cart:6379"
        collection_interval: 10s

    exporters:
      otlp:
        endpoint: jaeger-collector:4317
        tls:
          insecure: true
      otlphttp/prometheus:
        endpoint: http://prometheus:9090/api/v1/otlp
        tls:
          insecure: true
      opensearch:
        logs_index: otel
        http:
          endpoint: http://opensearch:9200
          tls:
            insecure: true
      # Add SignOz exporter
      signoz:
        endpoint: signoz-otel-collector.signoz:4317
        tls:
          insecure: true

    processors:
      transform:
        error_mode: ignore
        trace_statements:
          - context: span
            statements:
              - replace_pattern(name, "\\?.*", "")
              - replace_match(name, "GET /api/products/*", "GET /api/products/{productId}")
      resource:
        attributes:
        - key: service.instance.id
          from_attribute: k8s.pod.uid
          action: insert

    connectors:
      spanmetrics: {}

    service:
      pipelines:
        traces:
          processors: [memory_limiter, resource, transform, batch]
          exporters: [otlp, debug, spanmetrics, signoz]  # Added signoz
        metrics:
          receivers: [httpcheck/frontend-proxy, redis, otlp, spanmetrics]
          processors: [memory_limiter, resource, batch]
          exporters: [otlphttp/prometheus, debug, signoz]  # Added signoz
        logs:
          processors: [memory_limiter, resource, batch]
          exporters: [opensearch, debug, signoz]  # Added signoz
      telemetry:
        metrics:
          level: detailed
          readers:
            - periodic:
                interval: 10000
                timeout: 5000
                exporter:
                  otlp:
                    protocol: grpc
                    endpoint: otel-collector:4318