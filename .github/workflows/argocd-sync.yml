name: ArgoCD Sync

on:
  push:
    branches:
      - main
    paths:
      - .github/workflows/argocd-sync.yml
      - kubernetes/argocd-application.yaml
  workflow_run:
    workflows: ["Build Python Services", "Build Go Services", "Build Dotnet Services"]
    types:
      - completed
    branches:
      - main

env:
  ARGOCD_SERVER: ${{ vars.ARGOCD_SERVER }}
  ARGOCD_AUTH_TOKEN: ${{ secrets.ARGOCD_AUTH_TOKEN }}
  ARGOCD_APP_NAME: opentelemetry-demo
  ARGOCD_NAMESPACE: argocd
  KUBE_NAMESPACE: lyrid-016d2205-3e0f-4ef0-aa64-d7debe01f0b1
  ARGOCD_OPTS: "--insecure --grpc-web"

jobs:
  sync:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install ArgoCD CLI
        run: |
          curl -sSL -o argocd-linux-amd64 https://github.com/argoproj/argo-cd/releases/latest/download/argocd-linux-amd64
          sudo install -m 555 argocd-linux-amd64 /usr/local/bin/argocd
          rm argocd-linux-amd64

      - name: Install Helm
        run: |
          curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3
          chmod 700 get_helm.sh
          ./get_helm.sh

      - name: Add Helm Repositories
        run: |
          helm repo add sherlocks-otel https://migrateai.github.io/opentelemetry-helm-charts
          helm repo update

      - name: Configure kubectl
        run: |
          # Create kubeconfig directory
          mkdir -p $HOME/.kube

          # Write kubeconfig from secret
          echo "${{ secrets.KUBE_CONFIG }}" > $HOME/.kube/config

          # Set proper permissions
          chmod 600 $HOME/.kube/config

          # Verify connection
          kubectl cluster-info

      - name: Apply ArgoCD Application
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: |
          # Apply the ArgoCD application manifest
          kubectl apply -f kubernetes/argocd-application.yaml

      - name: Apply values.yaml
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: |
          # Apply values.yaml to the ArgoCD application using argocd app set
          argocd app set $ARGOCD_APP_NAME \
            --values values.yaml \
            --app-namespace $ARGOCD_NAMESPACE

      # - name: Sync Application
      #   if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      #   run: |
      #     # Sync the application with server-side apply for large resources
      #     argocd app sync $ARGOCD_APP_NAME \
      #       --prune=false \
      #       --assumeYes \
      #       --app-namespace $ARGOCD_NAMESPACE \
      #       $ARGOCD_OPTS

      - name: Check Application Status
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: |
          # # Wait for sync to complete
          # argocd app wait $ARGOCD_APP_NAME \
          #   --app-namespace $ARGOCD_NAMESPACE \
          #   --timeout 300

          # Get application status
          argocd app get $ARGOCD_APP_NAME \
            --app-namespace $ARGOCD_NAMESPACE

      - name: Show Diff
        if: github.event_name == 'pull_request'
        run: |
          argocd app diff $ARGOCD_APP_NAME \
            --namespace $ARGOCD_NAMESPACE
