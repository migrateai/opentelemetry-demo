name: Rebase Chaos Branches

on:
  schedule:
    # Run every 6 hours
    - cron: '0 */6 * * *'
  workflow_dispatch:  # Allow manual triggering

jobs:
  rebase:
    name: Rebase Chaos Branches
    runs-on: ubuntu-latest
    permissions:
      contents: write  # Required to push to branches

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch all history for all branches

      - name: Configure Git
        run: |
          git config --global user.name 'GitHub Actions'
          git config --global user.email 'github-actions@github.com'

      - name: Get Chaos Branches
        id: get-branches
        run: |
          # Get all remote branches with chaos/ prefix
          BRANCHES=$(git branch -r | grep 'origin/chaos/' | sed 's/origin\///' | tr '\n' ' ')
          echo "branches=$BRANCHES" >> $GITHUB_OUTPUT

      - name: Fetch Latest Changes
        run: |
          git fetch --prune origin
          git fetch origin main

      - name: Rebase Branches
        run: |
          for branch in ${{ steps.get-branches.outputs.branches }}; do
            echo "Processing branch: $branch"
            
            # Ensure we have the latest state of the branch
            git fetch origin $branch
            
            # Checkout the branch
            git checkout $branch
            
            # Get the current commit hash before rebase
            OLD_COMMIT=$(git rev-parse HEAD)
            
            # Attempt to rebase
            if git rebase origin/main; then
              # Get the new commit hash after rebase
              NEW_COMMIT=$(git rev-parse HEAD)
              
              # Only push if there were actual changes
              if [ "$OLD_COMMIT" != "$NEW_COMMIT" ]; then
                git push origin $branch --force
                echo "Successfully rebased and pushed $branch"
              else
                echo "No changes needed for $branch"
              fi
            else
              # If rebase fails, abort and log error
              git rebase --abort
              echo "Failed to rebase $branch"
              exit 1
            fi
            
            # Clean up
            git checkout main
            git clean -fd
          done
